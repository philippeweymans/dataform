config {
    type: "table",
    name: "sales_reshuffled",
    description: "Sales reshuffled",
    columns: {
        quarter: "Fiscal quarter",
        price: "calculated price , by dividing totalamount by quantity "
    }
}
  ---- BASED ON PREP QUERY- BUT REVERSED AS NEW TOTAL QUERY
  -- IMPROVED SETUP BECAUSE ALIGNS ONE BASIS FOR ALL SHUFFLE LOGIC
  -- 1 basis `boelpadel.kk_bifas.kk_sales_full` A
  -- no temp tables, e.g. `boelpadel.kk_bifas.acc_sales_2021_2022T3`
with A as (
  select 
  FORMAT_DATE('%d-%m-%Y',last_day(cast(A.createdon as DATETIME))) as last_day_month,
  FORMAT_DATE('%d-%m-%Y',DATE_TRUNC(cast(A.createdon as DATETIME), month)) as first_day_month,
  cast(extract(quarter from A.createdon) as INT64) as quarter,
  FORMAT_DATE('%Y%m%d', A.createdon) as yyyymmdd,
  FORMAT_DATE('%d-%m-%Y', A.createdon) as dd_mm_yyyy,
  FORMAT_DATE('%Y%m', A.createdon) as yyyymm,
  CAST(FORMAT_DATE('%Y', A.createdon) as INT64) as yyyy_int,
  CAST(FORMAT_DATE('%m', A.createdon) as INT64) as mm_int,
  cast(FORMAT_DATE('%d', A.createdon) as INT64) as dd_int,
  FORMAT_DATE('%m-%Y', A.createdon) as mm_yyyy,
  A.aff as affiliate,
  A.id as sales_id,
  totalamount/quantity as price,
  -- A.quantity as qty,
  case
  when WZ.season_if_date_is_between='WINTER' then
    mod(timestamp_diff(DATETIME_ADD(CAST(FORMAT_DATE('%Y-%m-%d %H:%M:00', A.createdon) as DATETIME), INTERVAL -1 HOUR), cast('2000-01-01T00:00:00' as DATETIME), MINUTE),100)
  when WZ.season_if_date_is_between is null then
    mod(timestamp_diff(DATETIME_ADD(CAST(FORMAT_DATE('%Y-%m-%d %H:%M:00', A.createdon) as DATETIME), INTERVAL -2 HOUR), cast('2000-01-01T00:00:00' as DATETIME), MINUTE),100)
  end as p1,
  A.*,
  B.description as paymethod
    FROM `boelpadel.kk_bifas.kk_sales_full` A
     left join `boelpadel.kk_bifas.winteruur_zomeruur` WZ on (A.YYYYMMDD >= WZ.start_winter_yyyymmdd AND A.YYYYMMDD < WZ.start_zomer_yyyymmdd)
     JOIN `boelpadel.sheets_22.kk_payment_methods` B on (A.paymethodid=B.id)
     left join `boelpadel.kk_bifas.kk_non_sales_full` E on (A.id=E.unique_id) 
  where 1=1 
  -- and A.yyyy in (2021,2022,2023,2024)
  and A.yyyy in (2021,2022)
  AND E.unique_id is null
)
select 
--concat(lpad(cast(round(mod((mm_int+dd_int)*100,42)/42*18)+5 as STRING),2,"0"),':',lpad(cast(round(mod((mm_int+dd_int)*100,42)/42*60) as STRING),2,"0")) as hhmm_dtrun,
case
when H3.quarter is not null then H3.quarter
else -1 
end as quarter_det,
case
when H3.vat is not null then H3.vat
else -1 
end as vat1_det,
case
when H3.price is not null then H3.price
else -1 
end as price_det,
case
when H3.itemname is not null then H3.itemname
else 'nvt' 
end as itemname_det,
-- case
-- when H3.quarter is not null then H3.quarter
-- else A.quarter
-- end as quarter,
A.quarter,
-- case
-- when H3.price is not null then H3.price
-- else A.price 
-- end as price,
A.price as price,
case
when H3.yyyy is not null then H3.pct1000_to
else -1 
end as pct1000_to,
case
when H3.yyyy is not null then H3.pct1000_from
else -1 
end as pct1000_from,
A.amount1 as totaal_btw_incl, 
-- case
-- when H3.type_of_shuffle='delete' and H3.yyyy is not null and A.p1<=H3.pct1000_to and A.p1>=H3.pct1000_from then 0
-- when H3.type_of_shuffle='move' and H3.yyyy is not null and A.p1<=H3.pct1000_to and A.p1>=H3.pct1000_from then 0
-- else amount1 
-- end as totaal_btw_incl_remaining,
case
when H3.type_of_shuffle='delete' and H3.yyyy is not null and A.p1<=H3.pct1000_to and A.p1>=H3.pct1000_from then 0
else A.amount1
end as totaal_btw_incl_remaining,
case
when H3.type_of_shuffle='delete' and H3.yyyy is not null and A.p1<=H3.pct1000_to and A.p1>=H3.pct1000_from then amount1
else 0 
end as totaal_btw_incl_shuffled_deleted,
case
when H3.type_of_shuffle='move' and H3.yyyy is not null and A.p1<=H3.pct1000_to and A.p1>=H3.pct1000_from then amount1
else 0 
end as totaal_btw_incl_shuffled_moved,
case
when H3.type_of_shuffle='move' and H3.yyyy is not null and A.p1<=H3.pct1000_to and A.p1>=H3.pct1000_from then 0
when H3.type_of_shuffle='delete' and H3.yyyy is not null and A.p1<=H3.pct1000_to and A.p1>=H3.pct1000_from then 0
else amount1
end as totaal_btw_incl_untouched,
case
when H3.type_of_shuffle is not null then H3.type_of_shuffle
else "nvt"
end as type_of_shuffle,
case
when H3.type_of_shuffle='move' and H3.move_grp<>-1 and A.p1<=H3.pct1000_to and A.p1>=H3.pct1000_from then H3.move_grp
when H3.type_of_shuffle='delete' and H3.move_grp<>-1 and A.p1<=H3.pct1000_to and A.p1>=H3.pct1000_from then H3.move_grp
else cast(A.revenuegroupid as INT64)
end as revenuegroupid_new,
-- case
-- when H3.type_of_shuffle='move' and H3.move_grp<>-1 then H3.move_grp
-- else A.revenuegroupid
-- end as revenuegroupid_new,
A.revenuegroupid as revenuegroupid_orig,
case
when H3.type_of_shuffle='move' and H3.move_vat<>-1 and A.p1<=H3.pct1000_to and A.p1>=H3.pct1000_from then H3.move_vat
when H3.type_of_shuffle='delete' and H3.move_vat<>-1 and A.p1<=H3.pct1000_to and A.p1>=H3.pct1000_from then -1
else A.vat1
end as vat1_new,
-- case
-- when H3.type_of_shuffle='move' and H3.move_vat<>-1 then H3.move_vat
-- else A.vat1
-- end as vat1_new,
A.vat1 as vat1_orig,
case
when H3.type_of_shuffle='move' and H3.move_item<>'nvt' and A.p1<=H3.pct1000_to and A.p1>=H3.pct1000_from then H3.move_item
when H3.type_of_shuffle='delete' and H3.move_item<>'nvt' and A.p1<=H3.pct1000_to and A.p1>=H3.pct1000_from then H3.move_item
else A.itemname
end as itemname_new,
-- case
-- when H3.move_item<>'nvt' then H3.move_item
-- else A.itemname
-- end as itemname_new,
A.itemname as itemname_orig,
C1.desc as revenuegroup_new,
C2.desc as revenuegroup_orig,
A.p1,A.id,A.yyyy,A.paymethodid, paymethod,
 H3.move_grp, 
 mm_yyyy, dd_mm_yyyy,affiliate,A.sales_id, first_day_month, last_day_month,
 A.quantity
-- H3.type_of_shuffle,A.p1, H3.pct1000_to,pct1000_from 
  FROM A
  LEFT JOIN  `boelpadel.kk_bifas.omzet_shuffle_master` H3 ON  
      case
        when H3.type='O_B_J_K_V_I_P_' then (H3.paymethodid=A.paymethodid AND H3.revenuegroupid=A.revenuegroupid AND H3.yyyy=A.yyyy AND H3.quarter=A.quarter and H3.vat=A.vat1 and H3.itemname=A.itemname and cast(H3.price as FLOAT64)=cast(A.price as FLOAT64))      
        when H3.type='O_B_J_V_I_P_' then (H3.paymethodid=A.paymethodid AND H3.revenuegroupid=A.revenuegroupid AND H3.yyyy=A.yyyy and H3.vat=A.vat1 and H3.itemname=A.itemname and cast(H3.price as FLOAT64)=cast(A.price as FLOAT64))     
        when H3.type='O_B_J_K_V_I_' then (H3.paymethodid=A.paymethodid AND H3.revenuegroupid=A.revenuegroupid AND H3.yyyy=A.yyyy AND H3.quarter=A.quarter and H3.vat=A.vat1 and H3.itemname=A.itemname )
        when H3.type='O_B_J_K_V_P_' then (H3.paymethodid=A.paymethodid AND H3.revenuegroupid=A.revenuegroupid AND H3.yyyy=A.yyyy AND H3.quarter=A.quarter and H3.vat=A.vat1 and cast(H3.price as FLOAT64)=cast(A.price as FLOAT64))
        when H3.type='O_B_J_K_V_' then (H3.paymethodid=A.paymethodid AND H3.revenuegroupid=A.revenuegroupid AND H3.yyyy=A.yyyy AND H3.quarter=A.quarter and H3.vat=A.vat1)
        when H3.type='O_B_J_V_I_' then (H3.paymethodid=A.paymethodid AND H3.revenuegroupid=A.revenuegroupid AND H3.yyyy=A.yyyy and H3.vat=A.vat1 and H3.itemname=A.itemname )
        when H3.type='O_B_J_V_P_' then (H3.paymethodid=A.paymethodid AND H3.revenuegroupid=A.revenuegroupid AND H3.yyyy=A.yyyy and H3.vat=A.vat1 and H3.price=A.price )
        when H3.type='O_B_J_V_' then (H3.paymethodid=A.paymethodid AND H3.revenuegroupid=A.revenuegroupid AND H3.yyyy=A.yyyy and H3.vat=A.vat1 )
      end
  LEFT JOIN `boelpadel.sheets_22.kk_revenue_groups` C1 ON
      case
        when H3.type_of_shuffle IN ('move','delete') and H3.move_grp<>-1 and A.p1<=H3.pct1000_to and A.p1>=H3.pct1000_from then (H3.move_grp=C1.id)
        else (A.revenuegroupid=C1.id)
      end
  LEFT JOIN `boelpadel.sheets_22.kk_revenue_groups` C2 ON (A.revenuegroupid=C2.id)